/* Элементами контейнеров являются целые числа. Для
заполнения контейнера использовать итератор и конструктор соответствующего контейнера,
для вывода элементов использовать итератор (для вывода элементов в обратном порядке
использовать обратные итераторы, возвращаемые функциями-членами rbegin и rend)
Обязательно наличие дружественного интерфейса. Ввод данных организовать
разными способами (с клавиатуры, рандом, из файла)

Даны списки L1 и L2; список L1 имеет нечетное количество элементов.
Переместить средний элемент списка L1 в конец списка L2. Использовать один вызов
функции-члена splice.

*/


#include "containers.h"
#include <iostream>
#include <locale>

int main() {
	setlocale(LC_ALL, "Russian");
	int n1, n2;
	list<int> L1;
	list<int> L2;

	cout << "Введите размер списка L1 (нечетное число): ";
	cin >> n1;
	cout << "Введите размер списка L2: ";
	cin >> n2;

	if (n1 <= 0 || n2 < 0) {
		cerr << "Ошибка: некорректный размер списка" << endl;
		return 1;
	}
	if (n1 % 2 == 0) {
		cerr << "Ошибка: размер L1 должен быть нечетным" << endl;
		return 1;
	}

	if (!Input(L1, n1)) {
		cerr << "Ошибка заполнения L1" << endl;
		return 1;
	}
	if (!Input(L2, n2)) {
		cerr << "Ошибка заполнения L2" << endl;
		return 1;
	}

	cout << "\nИсходные списки:" << endl;
	cout << "L1: ";
	Print(L1);
	cout << "L2: ";
	Print(L2);


	Splice(L1, L2);


	cout << "\nРезультат обработки:" << endl;
	cout << "L1: ";
	Print(L1);
	cout << "L2: ";
	Print(L2);

	return 0;
}