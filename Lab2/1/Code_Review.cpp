/*Дано число D и указатель P1 на вершину непустого стека.
Добавить элемент со значением D в стек и вывести адрес P2 новой вершины стека.

Для каждой динамической структуры должен быть предусмотрен стандартный набор методов -
добавления/удаления/вывода элементов.
Во всех задачах обязательно наличие дружественного интерфейса. Ввод данных с клавиатуры.

В заданиях подгруппы структура «стек» (stack) моделируется цепочкой связанных
узлов-записей типа TNode. Поле Next последнего элемента цепочки равно nullptr. Вершиной
стека (top) считается первый элемент цепочки. Для доступа к стеку используется указатель на
его вершину (для пустого стека данный указатель полагается равным nullptr). Значением
элемента стека считается значение его поля Data*/

#include <iostream>
#include "stack.h"

using namespace std;

int main() {
    setlocale(LC_ALL, "Russian");

    Stack stack;

    cout << "Введите количество элементов стека: ";
    int stack_size;
    cin >> stack_size;

    for (int i = 0; i < stack_size; ++i) {
        cout << "Введите элемент стека: ";
        int node_value;
        cin >> node_value;
        stack.add_node(node_value);
    }

    stack.show_stack();

    stack.delete_top();

    return 0;
}
